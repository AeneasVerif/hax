name: Install & test

on:
  pull_request:
  merge_group:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  tests:
    name: nix-action
    runs-on: linux
    steps:
    - uses: actions/checkout@v4
    - if: runner.environment == 'github-hosted'
      uses: DeterminateSystems/nix-installer-action@main
    - uses: cachix/cachix-action@v15
      with:
        name: hax
        skipPush: true
    - name: Build
      run: nix build -L

    - name: Install the toolchain
      run: |
        mkdir binaries
        # Install binaries in `binaries`
        nix build nixpkgs#yq .#rustc . -o binaries/result
        # Add the paths to PATH
        for path in $PWD/binaries/*/bin; do echo "$path"; done >> $GITHUB_PATH
        
    - name: Ensure readme coherency
      run: |
        nix build .#check-readme-coherency -L

    - name: Test the toolchain
      run: |
        nix build .#check-toolchain -L
        
    - name: Test the examples
      run: |
        nix build .#check-examples -L

    - name: Try to extract Rust By Examples
      run: |
        nix build .#rust-by-example-hax-extraction -L

    - name: Checkout specifications
      uses: actions/checkout@v4
      with:
        repository: 'hacspec/specs'
        path: specs

    - name: Push to Cachix
      if: ${{ github.event_name == 'workflow_dispatch'  || github.event_name == 'merge_group'  }}
      env:
        CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
      run: |
        nix build .# .#fstar --json \
          | jq -r '.[].outputs | to_entries[].value' \
          | cachix push hax

