---
source: test-harness/src/harness.rs
expression: snapshot
info:
  kind:
    Translate:
      backend: coq
  info:
    name: let-else
    manifest: let-else/Cargo.toml
    description: ~
  spec:
    optional: false
    broken: false
    issue_id: ~
    positive: true
    snapshot:
      stderr: false
      stdout: true
    include_flag: ~
    backend_options: ~
---
exit = 0

[stdout]
diagnostics = []

[stdout.files]
"Let_else.v" = '''
(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.


(* NotImplementedYet *)

Definition let_else (opt : t_Option ((t_u32))) : bool :=
  run (match opt with
  | t_Option_Some (x) =>
    t_ControlFlow_Continue (true)
  | _ =>
    t_ControlFlow_Break (false)
  end).

Definition let_else_different_type (opt : t_Option ((t_u32))) : bool :=
  run (let hoist1 := match opt with
  | t_Option_Some (x) =>
    t_ControlFlow_Continue (t_Option_Some (t_Add_f_add (x) (1)))
  | _ =>
    t_ControlFlow_Break (false)
  end in
  t_ControlFlow_Continue (let_else (hoist1))).
'''
