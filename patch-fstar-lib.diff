diff --git a/src/ocaml-output/Makefile b/src/ocaml-output/Makefile
index d2f8eb7853..11822b17ee 100644
--- a/src/ocaml-output/Makefile
+++ b/src/ocaml-output/Makefile
@@ -78,12 +78,31 @@ else
 	$(error Correct version of menhir not found (needs a version newer than $(MENHIR_MIN_VERSION)))
 endif
 
+# ../../ulib/gen_mllib.sh $(addprefix ../../,$(OCAMLBUILD_INCLUDES)) | grep -v "(Int128|Buffer)" > $@
+fstar-compiler-lib.mllib:
+	../../ulib/gen_mllib.sh . > $@
+	@echo 'FStar_Compiler_Util'     >> $@                   
+	@echo 'FStar_Getopt'            >> $@          
+	@echo 'Prims'                   >> $@ 
+	@echo 'FStar_Pervasives_Native' >> $@                   
+	@echo 'FStar_Compiler_Effect'   >> $@                 
+	@echo 'FStar_Platform'          >> $@          
+	@echo 'FStar_Pprint'            >> $@        
+	@echo 'FStar_String'            >> $@        
+	@echo 'FStar_Compiler_List'     >> $@                   
+	@echo 'FStar_ImmutableArray_Base'     >> $@                   
+	@echo 'FStar_List'     >> $@
+	@echo 'FStar_List_Tot_Base'     >> $@
+	@echo 'FStar_ST'     >> $@
+	@echo 'FStar_CommonST'     >> $@
+
 # https://stackoverflow.com/questions/38294095/ocaml-how-to-solve-findlib-warnings-of-multiple-cmis
 FSTAR_MAIN_NATIVE=_build/src/fstar/ml/main.native
 $(FSTAR_MAIN_NATIVE): export OCAMLFIND_IGNORE_DUPS_IN = $(shell ocamlfind query compiler-libs)
-$(FSTAR_MAIN_NATIVE): $(GENERATED_FILES)
+$(FSTAR_MAIN_NATIVE): $(GENERATED_FILES) fstar-compiler-lib.mllib
 	@echo "[OCAMLBUILD]"
 	$(Q)$(OCAMLBUILD) $(notdir $(FSTAR_MAIN_NATIVE)) FStar_Syntax_Syntax.inferred.mli
+	$(Q)$(OCAMLBUILD) fstar-compiler-lib.a fstar-compiler-lib.cma fstar-compiler-lib.cmxs fstar-compiler-lib.cmxa
 
 ../../bin/fstar.exe: $(FSTAR_MAIN_NATIVE)
 	$(Q)rm -f $@
@@ -93,14 +107,17 @@ $(FSTAR_MAIN_NATIVE): $(GENERATED_FILES)
 	$(Q)rm -f $@
 	$(Q)cp $^ $@
 
-install-compiler-lib: $(FSTAR_MAIN_NATIVE)
+install-compiler-lib: $(FSTAR_MAIN_NATIVE) # fstarlib.a fstarlib.cma fstarlib.cmxs fstarlib.cmxa
 	@echo "[INSTALL   fstar-compiler-lib]"
 	$(Q)mkdir -p ../../bin/fstar-compiler-lib/
 	@# VD: forcing the recompilation of modules in ulib/tactics_ml whenever the compiler is rebuilt
 	@# in order to avoid inconsistent assumption errors between fstartaclib and compiler-lib
 	$(Q)$(FIND) ../../ulib/tactics_ml \( -name '*.cmi' -or -name '*.cmx' \) -exec rm {} \;
-	$(Q)$(FIND) . \( -name '*.cmi' -or -name '*.cmx' \) -exec cp {} ../../bin/fstar-compiler-lib/ \;
+	$(Q)$(FIND) . \( -name '*.cmi' -or -name '*.cmx' -or -name '*.cmxa' -or -name '*.cmxs' -or -name '*.cma' -or -name '*.a' \) -exec cp {} ../../bin/fstar-compiler-lib/ \;
 	$(Q)sed "s/__FSTAR_VERSION__/$$(cat ../../version.txt)/" <../../ulib/ml/fstar-compiler-lib-META >../../bin/fstar-compiler-lib/META
+	@echo 'archive(toploop)="fstar-compiler-lib.cma"' >> ../../bin/fstar-compiler-lib/META
+	@echo 'archive(byte)="fstar-compiler-lib.cma"'    >> ../../bin/fstar-compiler-lib/META
+	@echo 'archive(native)="fstar-compiler-lib.cmxa"' >> ../../bin/fstar-compiler-lib/META
 	$(Q)touch $@
 
 FStar_Parser_Parse.ml: parse.mly
