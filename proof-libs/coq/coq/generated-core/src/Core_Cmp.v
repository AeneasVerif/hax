(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

Require Import Option.
Export Option.

Definition discriminant_Ordering_Equal : int8 :=
  (@repr WORDSIZE8 0).

Definition discriminant_Ordering_Greater : int8 :=
  (@repr WORDSIZE8 1).

Inductive t_Ordering : Type :=
| Ordering_Less : t_Ordering
| Ordering_Equal : t_Ordering
| Ordering_Greater : t_Ordering.

Definition impl__Ordering__is_eq (self : t_Ordering_t) : bool :=
  match self with
  | Ordering_Equal  =>
    true
  | _ =>
    false
  end.

Definition impl__Ordering__is_gt (self : t_Ordering_t) : bool :=
  match self with
  | Ordering_Greater  =>
    true
  | _ =>
    false
  end.

Definition impl__Ordering__is_lt (self : t_Ordering_t) : bool :=
  match self with
  | Ordering_Less  =>
    true
  | _ =>
    false
  end.

Definition impl__Ordering__reverse (self : t_Ordering_t) : t_Ordering_t :=
  match self with
  | Ordering_Less  =>
    Ordering_Greatert_Ordering_t
  | Ordering_Equal  =>
    Ordering_Equalt_Ordering_t
  | Ordering_Greater  =>
    Ordering_Lesst_Ordering_t
  end.

Definition discriminant_Ordering_Less : int8 :=
  (@repr WORDSIZE8 1).

Definition t_Ordering_cast_to_repr (x : t_Ordering_t) : int8 :=
  match x with
  | Ordering_Less  =>
    discriminant_Ordering_Less
  | Ordering_Equal  =>
    discriminant_Ordering_Equal
  | Ordering_Greater  =>
    discriminant_Ordering_Greater
  end.

Class t_PartialEq (Self : _) := {
  f_eq : (Self -> Rhs -> bool) ;
  f_ne : (Self -> Rhs -> bool) ;
}.

Definition impl__Ordering__is_ge (self : t_Ordering_t) : bool :=
  not match self with
  | Ordering_Less  =>
    true
  | _ =>
    false
  end.

Definition impl__Ordering__is_le (self : t_Ordering_t) : bool :=
  not match self with
  | Ordering_Greater  =>
    true
  | _ =>
    false
  end.

Definition impl__Ordering__is_ne (self : t_Ordering_t) : bool :=
  not match self with
  | Ordering_Equal  =>
    true
  | _ =>
    false
  end.

#[global] Instance t_Ordering_t_t_PartialEq : t_PartialEq t_Ordering_t t_Ordering_t := {
  f_eq (self : t_Ordering_t) (other : t_Ordering_t) := match self with
  | Ordering_Less  =>
    match other with
    | Ordering_Less  =>
      true
    | _ =>
      false
    end
  | Ordering_Equal  =>
    match other with
    | Ordering_Equal  =>
      true
    | _ =>
      false
    end
  | Ordering_Greater  =>
    match other with
    | Ordering_Greater  =>
      true
    | _ =>
      false
    end
  end;
  f_ne (self : t_Ordering_t) (other : t_Ordering_t) := not match self with
  | Ordering_Less  =>
    match other with
    | Ordering_Less  =>
      true
    | _ =>
      false
    end
  | Ordering_Equal  =>
    match other with
    | Ordering_Equal  =>
      true
    | _ =>
      false
    end
  | Ordering_Greater  =>
    match other with
    | Ordering_Greater  =>
      true
    | _ =>
      false
    end
  end;
}.

Class t_PartialOrd (Self : _) := {
  f_partial_cmp : (Self -> Rhs -> t_Option_t t_Ordering_t) ;
  f_lt : (Self -> Rhs -> bool) ;
  f_le : (Self -> Rhs -> bool) ;
  f_gt : (Self -> Rhs -> bool) ;
  f_ge : (Self -> Rhs -> bool) ;
}.
