(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

Require Import Add.
Export Add.

Require Import Div.
Export Div.

Require Import Mul.
Export Mul.

Require Import Neg.
Export Neg.

Require Import Rem.
Export Rem.

Require Import Sub.
Export Sub.

Require Import BitAnd.
Export BitAnd.

Require Import BitOr.
Export BitOr.

Require Import BitXor.
Export BitXor.

Require Import Not.
Export Not.

Require Import Shl.
Export Shl.

Require Import Shr.
Export Shr.

Require Import Ordering.
Export Ordering.

Require Import PartialEq.
Export PartialEq.

Require Import PartialOrd.
Export PartialOrd.

Require Import Crate_Base.
Export Crate_Base.

Require Import Crate_Base_Number_conversion.
Export Crate_Base_Number_conversion.

Require Import Crate_Base_interface_Int.
Export Crate_Base_interface_Int.

(*Not implemented yet? todo(item)*)

(*Not implemented yet? todo(item)*)

(*Not implemented yet? todo(item)*)

(*Not implemented yet? todo(item)*)

(*Not implemented yet? todo(item)*)

(*Not implemented yet? todo(item)*)

Record t_Slice (T : _) : Type := {
  f_v : t_Seq_t T;
}.

#[global] Instance t_Slice_t T_t_From (T : _) : t_From (t_Slice_t T) (seq T) := {
  f_from (x : seq T) := Build_Slice (f_v := Build_Seq (f_v := impl__to_vec x));
}.

(*item error backend*)

(*item error backend*)

(*item error backend*)

(*item error backend*)

Record t_u128 : Type := {
  0 : t_U128_t;
}.

#[global] Instance t_u128_t_t_Clone : t_Clone t_u128_t := {
  f_clone (self : t_u128_t) := C_u128 (f_clone (0 self));
}.

#[global] Instance t_u128_t_t_PartialEq : t_PartialEq t_u128_t t_u128_t := {
  f_eq (self : t_u128_t) (rhs : t_u128_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_u128_t) (rhs : t_u128_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_u128_t_t_PartialOrd : t_PartialOrd t_u128_t t_u128_t := {
  f_partial_cmp (self : t_u128_t) (rhs : t_u128_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_u128_t) (rhs : t_u128_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_u128_t) (rhs : t_u128_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_u128_t) (rhs : t_u128_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_u128_t) (rhs : t_u128_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.

Record t_u16 : Type := {
  0 : t_U16_t;
}.

#[global] Instance t_u16_t_t_Clone : t_Clone t_u16_t := {
  f_clone (self : t_u16_t) := C_u16 (f_clone (0 self));
}.

#[global] Instance t_u16_t_t_PartialEq : t_PartialEq t_u16_t t_u16_t := {
  f_eq (self : t_u16_t) (rhs : t_u16_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_u16_t) (rhs : t_u16_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_u16_t_t_PartialOrd : t_PartialOrd t_u16_t t_u16_t := {
  f_partial_cmp (self : t_u16_t) (rhs : t_u16_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_u16_t) (rhs : t_u16_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_u16_t) (rhs : t_u16_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_u16_t) (rhs : t_u16_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_u16_t) (rhs : t_u16_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.

Record t_u32 : Type := {
  0 : t_U32_t;
}.

#[global] Instance t_u32_t_t_Clone : t_Clone t_u32_t := {
  f_clone (self : t_u32_t) := C_u32 (f_clone (0 self));
}.

#[global] Instance t_u32_t_t_PartialEq : t_PartialEq t_u32_t t_u32_t := {
  f_eq (self : t_u32_t) (rhs : t_u32_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_u32_t) (rhs : t_u32_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_u32_t_t_PartialOrd : t_PartialOrd t_u32_t t_u32_t := {
  f_partial_cmp (self : t_u32_t) (rhs : t_u32_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_u32_t) (rhs : t_u32_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_u32_t) (rhs : t_u32_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_u32_t) (rhs : t_u32_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_u32_t) (rhs : t_u32_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.

Record t_u64 : Type := {
  0 : t_U64_t;
}.

#[global] Instance t_u64_t_t_Clone : t_Clone t_u64_t := {
  f_clone (self : t_u64_t) := C_u64 (f_clone (0 self));
}.

#[global] Instance t_u64_t_t_PartialEq : t_PartialEq t_u64_t t_u64_t := {
  f_eq (self : t_u64_t) (rhs : t_u64_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_u64_t) (rhs : t_u64_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_u64_t_t_PartialOrd : t_PartialOrd t_u64_t t_u64_t := {
  f_partial_cmp (self : t_u64_t) (rhs : t_u64_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_u64_t) (rhs : t_u64_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_u64_t) (rhs : t_u64_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_u64_t) (rhs : t_u64_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_u64_t) (rhs : t_u64_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.

Record t_u8 : Type := {
  0 : t_U8_t;
}.

#[global] Instance t_u8_t_t_Clone : t_Clone t_u8_t := {
  f_clone (self : t_u8_t) := C_u8 (f_clone (0 self));
}.

#[global] Instance t_u8_t_t_PartialEq : t_PartialEq t_u8_t t_u8_t := {
  f_eq (self : t_u8_t) (rhs : t_u8_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_u8_t) (rhs : t_u8_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_u8_t_t_PartialOrd : t_PartialOrd t_u8_t t_u8_t := {
  f_partial_cmp (self : t_u8_t) (rhs : t_u8_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_u8_t) (rhs : t_u8_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_u8_t) (rhs : t_u8_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_u8_t) (rhs : t_u8_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_u8_t) (rhs : t_u8_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.

Record t_usize : Type := {
  0 : t_U64_t;
}.

#[global] Instance t_usize_t_t_Clone : t_Clone t_usize_t := {
  f_clone (self : t_usize_t) := C_usize (f_clone (0 self));
}.

#[global] Instance t_usize_t_t_PartialEq : t_PartialEq t_usize_t t_usize_t := {
  f_eq (self : t_usize_t) (rhs : t_usize_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_usize_t) (rhs : t_usize_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_usize_t_t_PartialOrd : t_PartialOrd t_usize_t t_usize_t := {
  f_partial_cmp (self : t_usize_t) (rhs : t_usize_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_usize_t) (rhs : t_usize_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_usize_t) (rhs : t_usize_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_usize_t) (rhs : t_usize_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_usize_t) (rhs : t_usize_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.

Record t_i128 : Type := {
  0 : t_I128_t;
}.

#[global] Instance t_i128_t_t_Clone : t_Clone t_i128_t := {
  f_clone (self : t_i128_t) := C_i128 (f_clone (0 self));
}.

#[global] Instance t_i128_t_t_PartialEq : t_PartialEq t_i128_t t_i128_t := {
  f_eq (self : t_i128_t) (rhs : t_i128_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_i128_t) (rhs : t_i128_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_i128_t_t_PartialOrd : t_PartialOrd t_i128_t t_i128_t := {
  f_partial_cmp (self : t_i128_t) (rhs : t_i128_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_i128_t) (rhs : t_i128_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_i128_t) (rhs : t_i128_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_i128_t) (rhs : t_i128_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_i128_t) (rhs : t_i128_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.

Record t_i16 : Type := {
  0 : t_I16_t;
}.

#[global] Instance t_i16_t_t_Clone : t_Clone t_i16_t := {
  f_clone (self : t_i16_t) := C_i16 (f_clone (0 self));
}.

#[global] Instance t_i16_t_t_PartialEq : t_PartialEq t_i16_t t_i16_t := {
  f_eq (self : t_i16_t) (rhs : t_i16_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_i16_t) (rhs : t_i16_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_i16_t_t_PartialOrd : t_PartialOrd t_i16_t t_i16_t := {
  f_partial_cmp (self : t_i16_t) (rhs : t_i16_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_i16_t) (rhs : t_i16_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_i16_t) (rhs : t_i16_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_i16_t) (rhs : t_i16_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_i16_t) (rhs : t_i16_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.

Record t_i32 : Type := {
  0 : t_I32_t;
}.

#[global] Instance t_i32_t_t_Clone : t_Clone t_i32_t := {
  f_clone (self : t_i32_t) := C_i32 (f_clone (0 self));
}.

#[global] Instance t_i32_t_t_PartialEq : t_PartialEq t_i32_t t_i32_t := {
  f_eq (self : t_i32_t) (rhs : t_i32_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_i32_t) (rhs : t_i32_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_i32_t_t_PartialOrd : t_PartialOrd t_i32_t t_i32_t := {
  f_partial_cmp (self : t_i32_t) (rhs : t_i32_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_i32_t) (rhs : t_i32_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_i32_t) (rhs : t_i32_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_i32_t) (rhs : t_i32_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_i32_t) (rhs : t_i32_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.

Record t_i64 : Type := {
  0 : t_I64_t;
}.

#[global] Instance t_i64_t_t_Clone : t_Clone t_i64_t := {
  f_clone (self : t_i64_t) := C_i64 (f_clone (0 self));
}.

#[global] Instance t_i64_t_t_PartialEq : t_PartialEq t_i64_t t_i64_t := {
  f_eq (self : t_i64_t) (rhs : t_i64_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_i64_t) (rhs : t_i64_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_i64_t_t_PartialOrd : t_PartialOrd t_i64_t t_i64_t := {
  f_partial_cmp (self : t_i64_t) (rhs : t_i64_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_i64_t) (rhs : t_i64_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_i64_t) (rhs : t_i64_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_i64_t) (rhs : t_i64_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_i64_t) (rhs : t_i64_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.

Record t_i8 : Type := {
  0 : t_I8_t;
}.

#[global] Instance t_i8_t_t_Clone : t_Clone t_i8_t := {
  f_clone (self : t_i8_t) := C_i8 (f_clone (0 self));
}.

#[global] Instance t_i8_t_t_PartialEq : t_PartialEq t_i8_t t_i8_t := {
  f_eq (self : t_i8_t) (rhs : t_i8_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_i8_t) (rhs : t_i8_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_i8_t_t_PartialOrd : t_PartialOrd t_i8_t t_i8_t := {
  f_partial_cmp (self : t_i8_t) (rhs : t_i8_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_i8_t) (rhs : t_i8_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_i8_t) (rhs : t_i8_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_i8_t) (rhs : t_i8_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_i8_t) (rhs : t_i8_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.

Record t_isize : Type := {
  0 : t_I64_t;
}.

#[global] Instance t_isize_t_t_Clone : t_Clone t_isize_t := {
  f_clone (self : t_isize_t) := C_isize (f_clone (0 self));
}.

#[global] Instance t_isize_t_t_PartialEq : t_PartialEq t_isize_t t_isize_t := {
  f_eq (self : t_isize_t) (rhs : t_isize_t) := (0 self)=.?(0 rhs);
  f_ne (self : t_isize_t) (rhs : t_isize_t) := not ((0 self)=.?(0 rhs));
}.

#[global] Instance t_isize_t_t_PartialOrd : t_PartialOrd t_isize_t t_isize_t := {
  f_partial_cmp (self : t_isize_t) (rhs : t_isize_t) := f_partial_cmp (0 self) (0 rhs);
  f_lt (self : t_isize_t) (rhs : t_isize_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  =>
    true
  | _ =>
    false
  end;
  f_le (self : t_isize_t) (rhs : t_isize_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Less  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
  f_gt (self : t_isize_t) (rhs : t_isize_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  =>
    true
  | _ =>
    false
  end;
  f_ge (self : t_isize_t) (rhs : t_isize_t) := match f_partial_cmp (0 self) (0 rhs) with
  | Option_Some Ordering_Greater  | Ordering_Equal  =>
    true
  | _ =>
    false
  end;
}.
