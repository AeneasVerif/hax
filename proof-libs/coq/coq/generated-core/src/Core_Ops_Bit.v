(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import String.

From Core Require Import Core_Marker (t_Sized).
Export Core_Marker (t_Sized).

Class t_BitAnd `{v_Self : Type} `{v_Rhs : Type} `{t_Sized v_Rhs} : Type :=
  {
    t_BitAnd_f_Output : Type;
    t_BitAnd_f_bitand : v_Self -> v_Rhs -> t_BitAnd_f_Output;
  }.
Arguments t_BitAnd:clear implicits.
Arguments t_BitAnd (_) (_) {_}.

Class t_BitOr `{v_Self : Type} `{v_Rhs : Type} `{t_Sized v_Rhs} : Type :=
  {
    t_BitOr_f_Output : Type;
    t_BitOr_f_bitor : v_Self -> v_Rhs -> t_BitOr_f_Output;
  }.
Arguments t_BitOr:clear implicits.
Arguments t_BitOr (_) (_) {_}.

Class t_BitXor `{v_Self : Type} `{v_Rhs : Type} `{t_Sized v_Rhs} : Type :=
  {
    t_BitXor_f_Output : Type;
    t_BitXor_f_bitxor : v_Self -> v_Rhs -> t_BitXor_f_Output;
  }.
Arguments t_BitXor:clear implicits.
Arguments t_BitXor (_) (_) {_}.

Class t_Not `{v_Self : Type} : Type :=
  {
    t_Not_f_Output : Type;
    t_Not_f_not : v_Self -> t_Not_f_Output;
  }.
Arguments t_Not:clear implicits.
Arguments t_Not (_).

Class t_Shl `{v_Self : Type} `{v_Rhs : Type} `{t_Sized v_Rhs} : Type :=
  {
    t_Shl_f_Output : Type;
    t_Shl_f_shl : v_Self -> v_Rhs -> t_Shl_f_Output;
  }.
Arguments t_Shl:clear implicits.
Arguments t_Shl (_) (_) {_}.

Class t_Shr `{v_Self : Type} `{v_Rhs : Type} `{t_Sized v_Rhs} : Type :=
  {
    t_Shr_f_Output : Type;
    t_Shr_f_shr : v_Self -> v_Rhs -> t_Shr_f_Output;
  }.
Arguments t_Shr:clear implicits.
Arguments t_Shr (_) (_) {_}.
