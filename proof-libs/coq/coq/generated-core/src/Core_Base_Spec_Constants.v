(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

Require Import Super_Haxint.
Export Super_Haxint.

Definition v_BITS_128_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 128)]))).

Definition v_BITS_16_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 16)]))).

Definition v_BITS_32_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 32)]))).

Definition v_BITS_64_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 64)]))).

Definition v_BITS_8_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 8)]))).

Definition v_WORDSIZE_128_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 1)]))).

Definition v_WORDSIZE_128_SUB_1_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255)]))).

Definition v_WORDSIZE_16_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 1)]))).

Definition v_WORDSIZE_16_SUB_1_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255)]))).

Definition v_WORDSIZE_32_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 1)]))).

Definition v_WORDSIZE_32_SUB_1_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255)]))).

Definition v_WORDSIZE_4_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 128)]))).

Definition v_WORDSIZE_4_SUB_1_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 127)]))).

Definition v_WORDSIZE_64_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 0);
    (@repr WORDSIZE8 1)]))).

Definition v_WORDSIZE_64_SUB_1_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255);
    (@repr WORDSIZE8 255)]))).

Definition v_WORDSIZE_8_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 0);
    (@repr WORDSIZE8 1)]))).

Definition v_WORDSIZE_8_SUB_1_ : t_HaxInt_t :=
  Build_HaxInt (f_v := Cow_Borrowed (unsize (array_from_list [(@repr WORDSIZE8 255)]))).
