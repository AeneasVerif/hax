(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

Require Import PhantomData.
Export PhantomData.

Require Import Slice.
Export Slice.

(*Not implemented yet? todo(item)*)

Record t_Iter (T : _) : Type := {
  f_data : t_Slice_t T;
  f__marker : t_PhantomData_t T;
}.

Definition impl__new (slice : t_Slice_t T) : t_Iter_t T :=
  Build_Iter (f_data := f_clone slice) (f__marker := PhantomDatat_PhantomData_t T).

#[global] Instance t_Iter_t T_t_Clone (T : _) : t_Clone (t_Iter_t T) := {
  f_clone (self : t_Iter_t T) := Build_Iter (f_data := f_clone (f_data self)) (f__marker := f__marker self);
}.
