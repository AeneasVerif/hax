(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import String.


From Core Require Import Core_Option (t_Option).
Export Core_Option (t_Option).

Definition discriminant_t_Ordering_Ordering_Equal :=
  0%N.

Definition discriminant_t_Ordering_Ordering_Greater :=
  1%N.

Inductive t_Ordering : Type :=
| t_Ordering_Ordering_Less
| t_Ordering_Ordering_Equal
| t_Ordering_Ordering_Greater.
Arguments t_Ordering:clear implicits.
Arguments t_Ordering.

Definition impl__Ordering__is_eq (self : t_Ordering) : bool :=
  match self with
  |  t_Ordering_Ordering_Equal =>
    true
  |  _ =>
    false
  end.

Definition impl__Ordering__is_gt (self : t_Ordering) : bool :=
  match self with
  |  t_Ordering_Ordering_Greater =>
    true
  |  _ =>
    false
  end.

Definition impl__Ordering__is_lt (self : t_Ordering) : bool :=
  match self with
  |  t_Ordering_Ordering_Less =>
    true
  |  _ =>
    false
  end.

Definition impl__Ordering__reverse (self : t_Ordering) : t_Ordering :=
  match self with
  |  t_Ordering_Ordering_Less =>
    t_Ordering_Ordering_Greater
  |  t_Ordering_Ordering_Equal =>
    t_Ordering_Ordering_Equal
  |  t_Ordering_Ordering_Greater =>
    t_Ordering_Ordering_Less
  end.

Definition discriminant_t_Ordering_Ordering_Less :=
  1%N.

Definition t_Ordering_cast_to_repr (x : t_Ordering) :=
  match x with
  |  t_Ordering_Ordering_Less =>
    discriminant_t_Ordering_Ordering_Less
  |  t_Ordering_Ordering_Equal =>
    discriminant_t_Ordering_Ordering_Equal
  |  t_Ordering_Ordering_Greater =>
    discriminant_t_Ordering_Ordering_Greater
  end.

Class t_PartialEq `{v_Self : Type} `{v_Rhs : Type} : Type :=
  {
    t_PartialEq_f_eq : v_Self -> v_Rhs -> bool;
    t_PartialEq_f_ne : v_Self -> v_Rhs -> bool;
  }.
Arguments t_PartialEq:clear implicits.
Arguments t_PartialEq (_) (_).

Definition impl__Ordering__is_ge (self : t_Ordering) : bool :=
  negb (match self with
  |  t_Ordering_Ordering_Less =>
    true
  |  _ =>
    false
  end).

Definition impl__Ordering__is_le (self : t_Ordering) : bool :=
  negb (match self with
  |  t_Ordering_Ordering_Greater =>
    true
  |  _ =>
    false
  end).

Definition impl__Ordering__is_ne (self : t_Ordering) : bool :=
  negb (match self with
  |  t_Ordering_Ordering_Equal =>
    true
  |  _ =>
    false
  end).

Instance t_PartialEq_322340293 : t_PartialEq (t_Ordering) (t_Ordering) :=
  {
    t_PartialEq_f_eq := fun (self : t_Ordering) (other : t_Ordering) =>
      match self with
      |  t_Ordering_Ordering_Less =>
        match other with
        |  t_Ordering_Ordering_Less =>
          true
        |  _ =>
          false
        end
      |  t_Ordering_Ordering_Equal =>
        match other with
        |  t_Ordering_Ordering_Equal =>
          true
        |  _ =>
          false
        end
      |  t_Ordering_Ordering_Greater =>
        match other with
        |  t_Ordering_Ordering_Greater =>
          true
        |  _ =>
          false
        end
      end;
    t_PartialEq_f_ne := fun (self : t_Ordering) (other : t_Ordering) =>
      negb (match self with
      |  t_Ordering_Ordering_Less =>
        match other with
        |  t_Ordering_Ordering_Less =>
          true
        |  _ =>
          false
        end
      |  t_Ordering_Ordering_Equal =>
        match other with
        |  t_Ordering_Ordering_Equal =>
          true
        |  _ =>
          false
        end
      |  t_Ordering_Ordering_Greater =>
        match other with
        |  t_Ordering_Ordering_Greater =>
          true
        |  _ =>
          false
        end
      end);
  }.

Class t_PartialOrd `{v_Self : Type} `{v_Rhs : Type} `{t_PartialEq v_Self v_Rhs} : Type :=
  {
    t_PartialOrd_f_partial_cmp : v_Self -> v_Rhs -> t_Option (t_Ordering);
    t_PartialOrd_f_lt : v_Self -> v_Rhs -> bool;
    t_PartialOrd_f_le : v_Self -> v_Rhs -> bool;
    t_PartialOrd_f_gt : v_Self -> v_Rhs -> bool;
    t_PartialOrd_f_ge : v_Self -> v_Rhs -> bool;
  }.
Arguments t_PartialOrd:clear implicits.
Arguments t_PartialOrd (_) (_) {_}.
