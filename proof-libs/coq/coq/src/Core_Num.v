(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import String.

From Core Require Import Core_Int.
Export Core_Int.

From Core Require Import Core_Primitive.
Export Core_Primitive.

From Core Require Import Core_Intrinsics.
Export Core_Intrinsics.

(* NotImplementedYet *)

Definition impl_4__MAX : t_u128 :=
  Build_t_u128 (t_Constants_f_MAX).

Definition impl_4__MIN : t_u128 :=
  Build_t_u128 (t_Constants_f_MIN).

Definition impl_1__MAX : t_u16 :=
  Build_t_u16 (t_Constants_f_MAX).

Definition impl_1__MIN : t_u16 :=
  Build_t_u16 (t_Constants_f_MIN).

Definition impl__BITS : t_u32 :=
  Build_t_u32 (impl_21__BITS).

Definition impl_1__BITS : t_u32 :=
  Build_t_u32 (impl_48__BITS).

Definition impl_2__BITS : t_u32 :=
  Build_t_u32 (impl_75__BITS).

Definition impl_2__MAX : t_u32 :=
  Build_t_u32 (t_Constants_f_MAX).

Definition impl_2__MIN : t_u32 :=
  Build_t_u32 (t_Constants_f_MIN).

Definition impl_3__BITS : t_u32 :=
  Build_t_u32 (impl_102__BITS).

Definition impl_4__BITS : t_u32 :=
  Build_t_u32 (impl_129__BITS).

Definition impl_5__BITS : t_u32 :=
  Build_t_u32 (impl_102__BITS).

Definition impl_3__MAX : t_u64 :=
  Build_t_u64 (t_Constants_f_MAX).

Definition impl_3__MIN : t_u64 :=
  Build_t_u64 (t_Constants_f_MIN).

Definition impl__MAX : t_u8 :=
  Build_t_u8 (t_Constants_f_MAX).

Definition impl__MIN : t_u8 :=
  Build_t_u8 (t_Constants_f_MIN).

Definition impl_5__MAX : t_usize :=
  Build_t_usize (t_Constants_f_MAX).

Definition impl_5__MIN : t_usize :=
  Build_t_usize (t_Constants_f_MIN).

Definition impl__overflowing_add (self : t_u8) (rhs : t_u8) : (t_u8*bool) :=
  add_with_overflow_u8 (self) (rhs).

Definition impl_1__overflowing_add (self : t_u16) (rhs : t_u16) : (t_u16*bool) :=
  add_with_overflow_u16 (self) (rhs).

Definition impl_2__overflowing_add (self : t_u32) (rhs : t_u32) : (t_u32*bool) :=
  add_with_overflow_u32 (self) (rhs).

Definition impl_3__overflowing_add (self : t_u64) (rhs : t_u64) : (t_u64*bool) :=
  add_with_overflow_u64 (self) (rhs).

Definition impl_4__overflowing_add (self : t_u128) (rhs : t_u128) : (t_u128*bool) :=
  add_with_overflow_u128 (self) (rhs).

Definition impl_5__overflowing_add (self : t_usize) (rhs : t_usize) : (t_usize*bool) :=
  add_with_overflow_usize (self) (rhs).

(* Definition impl__from_le_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 1%N))) : t_u8 := *)
(*   let ret := t_Constants_f_ZERO in *)
(*   let index := t_Constants_f_ZERO in *)
(*   let '(index,ret) := fold_range (Build_t_usize (Build_t_U64 0%N)) (Build_t_usize (Build_t_U64 1%N)) (fun '(index,ret) _ => *)
(*     true) ((index,ret)) (fun '(index,ret) i => *)
(*     let val_i : t_U8 := t_Into_f_into (t_u8_0 impl_2__index (t_Clone_f_clone (bytes)) (i)) in *)
(*     let ret := t_Add_f_add (ret) (t_Shl_f_shl (val_i) (t_Mul_f_mul (impl_21__BITS) (t_Clone_f_clone (index)))) in *)
(*     let index := t_Add_f_add (index) (t_Constants_f_ONE) in *)
(*     (index,ret)) in *)
(*   Build_t_u8 (ret). *)

(* Definition impl__from_be_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 1%N))) : t_u8 := *)
(*   impl__from_le_bytes (impl_2__reverse (bytes)). *)

Definition impl__wrapping_add (self : t_u8) (rhs : t_u8) : t_u8 :=
  wrapping_add_u8 (self) (rhs).

Definition impl__wrapping_mul (self : t_u8) (rhs : t_u8) : t_u8 :=
  wrapping_mul_u8 (self) (rhs).

(* Definition impl_1__from_le_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 2%N))) : t_u16 := *)
(*   let ret := t_Constants_f_ZERO in *)
(*   let index := t_Constants_f_ZERO in *)
(*   let '(index,ret) := fold_range (Build_t_usize (Build_t_U64 0%N)) (Build_t_usize (Build_t_U64 2%N)) (fun '(index,ret) _ => *)
(*     true) ((index,ret)) (fun '(index,ret) i => *)
(*     let val_i : t_U16 := t_Into_f_into (t_u8_0 impl_2__index (t_Clone_f_clone (bytes)) (i)) in *)
(*     let ret := t_Add_f_add (ret) (t_Shl_f_shl (val_i) (t_Mul_f_mul (impl_21__BITS) (t_Clone_f_clone (index)))) in *)
(*     let index := t_Add_f_add (index) (t_Constants_f_ONE) in *)
(*     (index,ret)) in *)
(*   Build_t_u16 (ret). *)

(* Definition impl_1__from_be_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 2%N))) : t_u16 := *)
(*   impl_1__from_le_bytes (impl_2__reverse (bytes)). *)

Definition impl_1__wrapping_add (self : t_u16) (rhs : t_u16) : t_u16 :=
  wrapping_add_u16 (self) (rhs).

Definition impl_1__wrapping_mul (self : t_u16) (rhs : t_u16) : t_u16 :=
  wrapping_mul_u16 (self) (rhs).

(* Definition impl_2__from_le_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 4%N))) : t_u32 := *)
(*   let ret := t_Constants_f_ZERO in *)
(*   let index := t_Constants_f_ZERO in *)
(*   let '(index,ret) := fold_range (Build_t_usize (Build_t_U64 0%N)) (Build_t_usize (Build_t_U64 4%N)) (fun '(index,ret) _ => *)
(*     true) ((index,ret)) (fun '(index,ret) i => *)
(*     let val_i : t_U32 := t_Into_f_into (t_u8_0 impl_2__index (t_Clone_f_clone (bytes)) (i)) in *)
(*     let ret := t_Add_f_add (ret) (t_Shl_f_shl (val_i) (t_Mul_f_mul (impl_21__BITS) (t_Clone_f_clone (index)))) in *)
(*     let index := t_Add_f_add (index) (t_Constants_f_ONE) in *)
(*     (index,ret)) in *)
(*   Build_t_u32 (ret). *)

(* Definition impl_2__from_be_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 4%N))) : t_u32 := *)
(*   impl_2__from_le_bytes (impl_2__reverse (bytes)). *)

Definition impl_2__wrapping_add (self : t_u32) (rhs : t_u32) : t_u32 :=
  wrapping_add_u32 (self) (rhs).

Definition impl_2__wrapping_mul (self : t_u32) (rhs : t_u32) : t_u32 :=
  wrapping_mul_u32 (self) (rhs).

(* Definition impl_3__from_le_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 8%N))) : t_u64 := *)
(*   let ret := t_Constants_f_ZERO in *)
(*   let index := t_Constants_f_ZERO in *)
(*   let '(index,ret) := fold_range (Build_t_usize (Build_t_U64 0%N)) (Build_t_usize (Build_t_U64 8%N)) (fun '(index,ret) _ => *)
(*     true) ((index,ret)) (fun '(index,ret) i => *)
(*     let val_i : t_U64 := t_Into_f_into (t_u8_0 impl_2__index (t_Clone_f_clone (bytes)) (i)) in *)
(*     let ret := t_Add_f_add (ret) (t_Shl_f_shl (val_i) (t_Mul_f_mul (impl_21__BITS) (t_Clone_f_clone (index)))) in *)
(*     let index := t_Add_f_add (index) (t_Constants_f_ONE) in *)
(*     (index,ret)) in *)
(*   Build_t_u64 (ret). *)

(* Definition impl_3__from_be_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 8%N))) : t_u64 := *)
(*   impl_3__from_le_bytes (impl_2__reverse (bytes)). *)

Definition impl_3__wrapping_add (self : t_u64) (rhs : t_u64) : t_u64 :=
  wrapping_add_u64 (self) (rhs).

Definition impl_3__wrapping_mul (self : t_u64) (rhs : t_u64) : t_u64 :=
  wrapping_mul_u64 (self) (rhs).

(* Definition impl_4__from_le_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 16%N))) : t_u128 := *)
(*   let ret := t_Constants_f_ZERO in *)
(*   let index := t_Constants_f_ZERO in *)
(*   let '(index,ret) := fold_range (Build_t_usize (Build_t_U64 0%N)) (Build_t_usize (Build_t_U64 16%N)) (fun '(index,ret) _ => *)
(*     true) ((index,ret)) (fun '(index,ret) i => *)
(*     let val_i : t_U128 := t_Into_f_into (t_u8_0 impl_2__index (t_Clone_f_clone (bytes)) (i)) in *)
(*     let ret := t_Add_f_add (ret) (t_Shl_f_shl (val_i) (t_Mul_f_mul (impl_21__BITS) (t_Clone_f_clone (index)))) in *)
(*     let index := t_Add_f_add (index) (t_Constants_f_ONE) in *)
(*     (index,ret)) in *)
(*   Build_t_u128 (ret). *)

(* Definition impl_4__from_be_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 16%N))) : t_u128 := *)
(*   impl_4__from_le_bytes (impl_2__reverse (bytes)). *)

Definition impl_4__wrapping_add (self : t_u128) (rhs : t_u128) : t_u128 :=
  wrapping_add_u128 (self) (rhs).

Definition impl_4__wrapping_mul (self : t_u128) (rhs : t_u128) : t_u128 :=
  wrapping_mul_u128 (self) (rhs).

(* Definition impl_5__from_le_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 8%N))) : t_usize := *)
(*   let ret := t_Constants_f_ZERO in *)
(*   let index := t_Constants_f_ZERO in *)
(*   let '(index,ret) := fold_range (Build_t_usize (Build_t_U64 0%N)) (Build_t_usize (Build_t_U64 8%N)) (fun '(index,ret) _ => *)
(*     true) ((index,ret)) (fun '(index,ret) i => *)
(*     let val_i : t_U64 := t_Into_f_into (t_u8_0 impl_2__index (t_Clone_f_clone (bytes)) (i)) in *)
(*     let ret := t_Add_f_add (ret) (t_Shl_f_shl (val_i) (t_Mul_f_mul (impl_21__BITS) (t_Clone_f_clone (index)))) in *)
(*     let index := t_Add_f_add (index) (t_Constants_f_ONE) in *)
(*     (index,ret)) in *)
(*   Build_t_usize (ret). *)

(* Definition impl_5__from_be_bytes (bytes : t_Array (t_u8) (Build_t_usize (Build_t_U64 8%N))) : t_usize := *)
(*   impl_5__from_le_bytes (impl_2__reverse (bytes)). *)

Definition impl_5__wrapping_add (self : t_usize) (rhs : t_usize) : t_usize :=
  wrapping_add_usize (self) (rhs).

Definition impl_5__wrapping_mul (self : t_usize) (rhs : t_usize) : t_usize :=
  wrapping_mul_usize (self) (rhs).

Definition impl__wrapping_sub (self : t_u8) (rhs : t_u8) : t_u8 :=
  wrapping_sub_u8 (self) (rhs).

Definition impl__wrapping_neg (self : t_u8) : t_u8 :=
  impl__wrapping_sub (Build_t_u8 (t_Constants_f_ZERO)) (self).

Definition impl_1__wrapping_sub (self : t_u16) (rhs : t_u16) : t_u16 :=
  wrapping_sub_u16 (self) (rhs).

Definition impl_1__wrapping_neg (self : t_u16) : t_u16 :=
  impl_1__wrapping_sub (Build_t_u16 (t_Constants_f_ZERO)) (self).

Definition impl_2__wrapping_sub (self : t_u32) (rhs : t_u32) : t_u32 :=
  wrapping_sub_u32 (self) (rhs).

Definition impl_2__wrapping_neg (self : t_u32) : t_u32 :=
  impl_2__wrapping_sub (Build_t_u32 (t_Constants_f_ZERO)) (self).

Definition impl_3__wrapping_sub (self : t_u64) (rhs : t_u64) : t_u64 :=
  wrapping_sub_u64 (self) (rhs).

Definition impl_3__wrapping_neg (self : t_u64) : t_u64 :=
  impl_3__wrapping_sub (Build_t_u64 (t_Constants_f_ZERO)) (self).

Definition impl_4__wrapping_sub (self : t_u128) (rhs : t_u128) : t_u128 :=
  wrapping_sub_u128 (self) (rhs).

Definition impl_4__wrapping_neg (self : t_u128) : t_u128 :=
  impl_4__wrapping_sub (Build_t_u128 (t_Constants_f_ZERO)) (self).

Definition impl_5__wrapping_sub (self : t_usize) (rhs : t_usize) : t_usize :=
  wrapping_sub_usize (self) (rhs).

Definition impl_5__wrapping_neg (self : t_usize) : t_usize :=
  impl_5__wrapping_sub (Build_t_usize (t_Constants_f_ZERO)) (self).

Definition impl__wrapping_rem (self : t_u8) (rhs : t_u8) : t_u8 :=
  t_Rem_f_rem (self) (rhs).

Definition impl__wrapping_rem_euclid (self : t_u8) (rhs : t_u8) : t_u8 :=
  t_Rem_f_rem (self) (rhs).

Definition impl__wrapping_div (self : t_u8) (rhs : t_u8) : t_u8 :=
  t_Div_f_div (self) (rhs).

Definition impl__wrapping_div_euclid (self : t_u8) (rhs : t_u8) : t_u8 :=
  t_Div_f_div (self) (rhs).

Definition impl_1__wrapping_rem (self : t_u16) (rhs : t_u16) : t_u16 :=
  t_Rem_f_rem (self) (rhs).

Definition impl_1__wrapping_rem_euclid (self : t_u16) (rhs : t_u16) : t_u16 :=
  t_Rem_f_rem (self) (rhs).

Definition impl_1__wrapping_div (self : t_u16) (rhs : t_u16) : t_u16 :=
  t_Div_f_div (self) (rhs).

Definition impl_1__wrapping_div_euclid (self : t_u16) (rhs : t_u16) : t_u16 :=
  t_Div_f_div (self) (rhs).

Definition impl_2__wrapping_rem (self : t_u32) (rhs : t_u32) : t_u32 :=
  t_Rem_f_rem (self) (rhs).

Definition impl_2__wrapping_rem_euclid (self : t_u32) (rhs : t_u32) : t_u32 :=
  t_Rem_f_rem (self) (rhs).

Definition impl_2__wrapping_div (self : t_u32) (rhs : t_u32) : t_u32 :=
  t_Div_f_div (self) (rhs).

Definition impl_2__wrapping_div_euclid (self : t_u32) (rhs : t_u32) : t_u32 :=
  t_Div_f_div (self) (rhs).

Definition impl_3__wrapping_rem (self : t_u64) (rhs : t_u64) : t_u64 :=
  t_Rem_f_rem (self) (rhs).

Definition impl_3__wrapping_rem_euclid (self : t_u64) (rhs : t_u64) : t_u64 :=
  t_Rem_f_rem (self) (rhs).

Definition impl_3__wrapping_div (self : t_u64) (rhs : t_u64) : t_u64 :=
  t_Div_f_div (self) (rhs).

Definition impl_3__wrapping_div_euclid (self : t_u64) (rhs : t_u64) : t_u64 :=
  t_Div_f_div (self) (rhs).

Definition impl_4__wrapping_rem (self : t_u128) (rhs : t_u128) : t_u128 :=
  t_Rem_f_rem (self) (rhs).

Definition impl_4__wrapping_rem_euclid (self : t_u128) (rhs : t_u128) : t_u128 :=
  t_Rem_f_rem (self) (rhs).

Definition impl_4__wrapping_div (self : t_u128) (rhs : t_u128) : t_u128 :=
  t_Div_f_div (self) (rhs).

Definition impl_4__wrapping_div_euclid (self : t_u128) (rhs : t_u128) : t_u128 :=
  t_Div_f_div (self) (rhs).

Definition impl_5__wrapping_rem (self : t_usize) (rhs : t_usize) : t_usize :=
  t_Rem_f_rem (self) (rhs).

Definition impl_5__wrapping_rem_euclid (self : t_usize) (rhs : t_usize) : t_usize :=
  t_Rem_f_rem (self) (rhs).

Definition impl_5__wrapping_div (self : t_usize) (rhs : t_usize) : t_usize :=
  t_Div_f_div (self) (rhs).

Definition impl_5__wrapping_div_euclid (self : t_usize) (rhs : t_usize) : t_usize :=
  t_Div_f_div (self) (rhs).
