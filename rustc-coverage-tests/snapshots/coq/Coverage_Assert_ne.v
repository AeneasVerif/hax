(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.

(* NotImplementedYet *)

From Coverage Require Import Core_Hint (t_black_box).
Export Core_Hint (t_black_box).

Record t_Foo : Type :=
  {
    0 : t_u32;
  }.
Arguments t_Foo:clear implicits.
Arguments t_Foo.
Arguments Build_t_Foo.
#[export] Instance settable_t_Foo : Settable _ :=
  settable! (@Build_t_Foo) <0>.







Definition main (_ : unit) : unit :=
  let _ := match (black_box (Build_t_Foo (5)),if
    black_box (false)
  then
    Build_t_Foo (0)
  else
    Build_t_Foo (1)) with
  | (left_val,right_val) =>
    assert (f_not (f_eq (left_val) (right_val)))
  end in
  tt.
