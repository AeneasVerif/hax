(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.

(* NotImplementedYet *)

Definition main (_ : unit) : unit :=
  let is_true := f_eq (f_len (args (tt))) (1) in
  let a : t_u8 := 0 in
  let b : t_u8 := 0 in
  let (a,b) := if
    is_true
  then
    let a := 2 in
    let b := 0 in
    (a,b)
  else
    (a,b) in
  let _ := match (a,b) with
  | (0
  | 1,2
  | 3) =>
    tt
  | _ =>
    tt
  end in
  let (a,b) := if
    is_true
  then
    let a := 0 in
    let b := 0 in
    (a,b)
  else
    (a,b) in
  let _ := match (a,b) with
  | (0
  | 1,2
  | 3) =>
    tt
  | _ =>
    tt
  end in
  let (a,b) := if
    is_true
  then
    let a := 2 in
    let b := 2 in
    (a,b)
  else
    (a,b) in
  let _ := match (a,b) with
  | (0
  | 1,2
  | 3) =>
    tt
  | _ =>
    tt
  end in
  let (a,b) := if
    is_true
  then
    let a := 0 in
    let b := 2 in
    (a,b)
  else
    (a,b) in
  match (a,b) with
  | (0
  | 1,2
  | 3) =>
    tt
  | _ =>
    tt
  end.
