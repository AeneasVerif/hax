(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.

(* NotImplementedYet *)

Definition do_not_add_coverage_1_ (_ : unit) : unit :=
  let _ := e_print (impl_2__new_const (["called but not covered
"%string])) in
  let _ := tt in
  tt.

Definition do_not_add_coverage_2_ (_ : unit) : unit :=
  let _ := e_print (impl_2__new_const (["called but not covered
"%string])) in
  let _ := tt in
  tt.

Definition do_not_add_coverage_not_called (_ : unit) : unit :=
  let _ := e_print (impl_2__new_const (["not called and not covered
"%string])) in
  let _ := tt in
  tt.

Definition add_coverage_1_ (_ : unit) : unit :=
  let _ := e_print (impl_2__new_const (["called and covered
"%string])) in
  let _ := tt in
  tt.

Definition add_coverage_2_ (_ : unit) : unit :=
  let _ := e_print (impl_2__new_const (["called and covered
"%string])) in
  let _ := tt in
  tt.

Definition add_coverage_not_called (_ : unit) : unit :=
  let _ := e_print (impl_2__new_const (["not called but covered
"%string])) in
  let _ := tt in
  tt.

Definition main (_ : unit) : unit :=
  let is_true := f_eq (f_len (args (tt))) (1) in
  let _ := do_not_add_coverage_1_ (tt) in
  let _ := do_not_add_coverage_2_ (tt) in
  let _ := add_coverage_1_ (tt) in
  let _ := add_coverage_2_ (tt) in
  let _ := outer_not_covered (is_true) in
  let _ := outer (is_true) in
  let _ := outer_both_covered (is_true) in
  tt.
