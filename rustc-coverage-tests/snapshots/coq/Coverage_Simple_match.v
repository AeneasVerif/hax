(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.

(* NotImplementedYet *)

Definition main (_ : unit) : (unit*unit) :=
  let is_true := f_eq (f_len (args (tt))) (1) in
  let countdown := 1 in
  let countdown := if
    is_true
  then
    let countdown := 0 in
    countdown
  else
    countdown in
  (failure ("(FunctionalizeLoops) something is not implemented yet.This is discussed in issue https://github.com/hacspec/hax/issues/405.
Please upvote or comment this issue if you see this error message.
Loop without mutation"%string) ("{
 for _ in (core::iter::traits::collect::f_into_iter(core::ops::range::Range {
 f_start: 0,
 f_end: 2,
 })) {
 rust_primitives::hax::failure(
 "(AST import) something is not implemented yet.This is d..."%string),tt).
