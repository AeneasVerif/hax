(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.

(* NotImplementedYet *)

Definition main (_ : unit) : unit :=
  let is_true := f_eq (f_len (args (tt))) (1) in
  let (a,b,c) := (0,0,0) in
  let (a,b,c) := if
    is_true
  then
    let a := 1 in
    let b := 10 in
    let c := 100 in
    (a,b,c)
  else
    (a,b,c) in
  let somebool := orb (f_lt (a) (b)) (f_lt (b) (c)) in
  let somebool := orb (f_lt (b) (a)) (f_lt (b) (c)) in
  let somebool := andb (f_lt (a) (b)) (f_lt (b) (c)) in
  let somebool := andb (f_lt (b) (a)) (f_lt (b) (c)) in
  let a := if
    f_not (is_true)
  then
    let a := 2 in
    a
  else
    a in
  let (b,c) := if
    is_true
  then
    let b := 30 in
    (b,c)
  else
    let c := 400 in
    (b,c) in
  let a := if
    f_not (is_true)
  then
    let a := 2 in
    a
  else
    a in
  if
    is_true
  then
    let b := 30 in
    tt
  else
    let c := 400 in
    tt.
