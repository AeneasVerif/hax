(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.

(* NotImplementedYet *)

Definition might_abort (should_abort : bool) : unit :=
  if
    should_abort
  then
    let _ := e_print (impl_2__new_const (["aborting...
"%string])) in
    let _ := tt in
    never_to_any (panic_fmt (impl_2__new_const (["panics and aborts"%string])))
  else
    let _ := e_print (impl_2__new_const (["Don't Panic
"%string])) in
    let _ := tt in
    tt.

Definition main (_ : unit) : t_Result ((unit)) ((t_u8)) :=
  let countdown := 10 in
  let countdown := failure ("(FunctionalizeLoops) something is not implemented yet.This is discussed in issue https://github.com/hacspec/hax/issues/933.
Please upvote or comment this issue if you see this error message.
Unhandled loop kind"%string) ("{
 (loop {
 |countdown| {
 (if core::cmp::f_gt(countdown, 0) {
 {
 let _: tuple0 = {
 (if core::cmp::f_lt(countdown, 5) {
 {
 let _: tuple0 = { coverage::abort::might_abort(false) };
 Tuple0
 }
 } els..."%string) in
  Result_Ok (tt).
